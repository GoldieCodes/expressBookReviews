const express = require("express")
const jwt = require("jsonwebtoken")
let books = require("./booksdb.js")
const regd_users = express.Router()

let users = []
const JWT_SECRET =
  "veryveryverysecretstuffthatshouldbeautogeneratedusinglibsegcryptoandshouldbestoredinenvfileandshouldneverbecommittedandpushedtogitorgithub"

const isValid = (username) => {
  //returns boolean
  //code to check is the username is valid
  const user = users.find((user) => user.username === username)
  if (user) return false // username already exists
  return true // username is valid
}

const authenticatedUser = (username, password) => {
  //returns boolean
  //code to check if username and password match the one we have in records.
  const user = users.find(
    (user) => user.username === username && user.password === password
  )
  if (user) return true // user is authenticated
  return false
}

//only registered users can login
regd_users.post("/login", (req, res) => {
  //Write your code here
  const username = req.body.username
  const password = req.body.password

  if (authenticatedUser(username, password)) {
    const token = jwt.sign({ user: username }, JWT_SECRET, {
      expiresIn: 60 * 60,
    })
    return res.json({ token })
  } else return res.send({ message: "Invalid username or password." })
})

// Add a book review
regd_users.put("/auth/review/:isbn", (req, res) => {
  const isbn = req.params.isbn
  const user = req.user.user
  const review = req.body.review
  const isbnExists = Object.keys(books).includes(isbn)

  if (isbnExists) {
    // Check if the user has already reviewed the book
    let existingReviews = books[isbn].reviews
    let userReview = existingReviews[user]

    if (userReview) {
      existingReviews[user] = review
      return res.send({ message: "Review edited successfully" })
    } else {
      existingReviews[user] = review
      return res.send({ message: "Review added successfully" })
    }
  }
  return res.status(404).json({ message: "ISBN doesn't exist" })
})

// delete user's review
regd_users.delete("/auth/review/:isbn", (req, res) => {
  const isbn = req.params.isbn
  const user = req.user.user
  const isbnExists = Object.keys(books).includes(isbn)

  if (isbnExists) {
    // Check if the user has reviewed the book
    let existingReviews = books[isbn].reviews
    let userReview = existingReviews[user]

    if (userReview) {
      delete existingReviews[user]
      return res.send({ message: "Review deleted successfully" })
    }
    // If we get here, the user hasn't reviewed the book
    return res.status(404).json({ message: "No review found for this user" })
  }
  // If we get here, the ISBN doesn't exist
  return res.status(404).json({ message: "ISBN doesn't exist" })
})

module.exports.authenticated = regd_users
module.exports.isValid = isValid
module.exports.users = users
module.exports.jwtSecret = JWT_SECRET
